import{_ as a,c as e,o as s,a5 as i}from"./chunks/framework.CxC7zvk1.js";const b=JSON.parse('{"title":"Java基础","description":"","frontmatter":{},"headers":[],"relativePath":"Java基础.md","filePath":"Java基础.md"}'),t={name:"Java基础.md"},n=i(`<h1 id="java基础" tabindex="-1">Java基础 <a class="header-anchor" href="#java基础" aria-label="Permalink to &quot;Java基础&quot;">​</a></h1><p>这是关于学习Java基础的文章</p><h2 id="简单示例" tabindex="-1">简单示例 <a class="header-anchor" href="#简单示例" aria-label="Permalink to &quot;简单示例&quot;">​</a></h2><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">public class Main(){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    public static void main(String [] args){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.println(&quot;Hello Java!&quot;);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="输出语句" tabindex="-1">输出语句 <a class="header-anchor" href="#输出语句" aria-label="Permalink to &quot;输出语句&quot;">​</a></h2><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">System.out.println(&quot;Hello Java!&quot;);</span></span></code></pre></div><h2 id="基本类型" tabindex="-1">基本类型 <a class="header-anchor" href="#基本类型" aria-label="Permalink to &quot;基本类型&quot;">​</a></h2><h3 id="整型" tabindex="-1">整型 <a class="header-anchor" href="#整型" aria-label="Permalink to &quot;整型&quot;">​</a></h3><h4 id="短整型" tabindex="-1">短整型 <a class="header-anchor" href="#短整型" aria-label="Permalink to &quot;短整型&quot;">​</a></h4><p>用int进行创建一个短整型</p><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">int a=0</span></span></code></pre></div><h4 id="长整型" tabindex="-1">长整型 <a class="header-anchor" href="#长整型" aria-label="Permalink to &quot;长整型&quot;">​</a></h4><p>用long进行创建一个短整型</p><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">long a=0</span></span></code></pre></div><h3 id="浮点型" tabindex="-1">浮点型 <a class="header-anchor" href="#浮点型" aria-label="Permalink to &quot;浮点型&quot;">​</a></h3><h3 id="布尔类型" tabindex="-1">布尔类型 <a class="header-anchor" href="#布尔类型" aria-label="Permalink to &quot;布尔类型&quot;">​</a></h3><h3 id="字符型" tabindex="-1">字符型 <a class="header-anchor" href="#字符型" aria-label="Permalink to &quot;字符型&quot;">​</a></h3><h3 id="字节" tabindex="-1">字节 <a class="header-anchor" href="#字节" aria-label="Permalink to &quot;字节&quot;">​</a></h3>`,18),l=[n];function h(o,d,r,p,c,u){return s(),e("div",null,l)}const m=a(t,[["render",h]]);export{b as __pageData,m as default};
